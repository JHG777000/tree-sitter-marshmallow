+-*************************************************************
*  Block comments in marshmallow.                             *
*                                                             *
*                                                             *
*************************************************************-+

module mymod.

 require module othermod.

 external function puts(s8 string).

 enum ( enum1 := 5223, enum2, enum3 := 42, enum4 := (-(40+2)), enum5 := 0, enum6 := (3<<3) ) myenum.

 constructor myclass().

  s8 mystring := "Hello World!!!!".

  f32 myvar := (.2f).

  i32 myvar2 := 1.

  u64 ðŸ˜ƒ := 'ðŸ˜ƒ'.

  u32 ðŸ˜ƒ2 := ($u32(ðŸ˜ƒ)).

  hello x := ($i8($$$u64($$$int*($$int[](array))))).

  f64[3][3] myvar := {{1,1,1},{1,1,1},{1,1,1}}.

  myvar := (3+(myvar:=1)).

  myvar := othermod::array[1]->func(1).

  (myvar+=3).

  myvar++.

  myvar--.

  (myvar++)++.

 end constructor.

 function myfunc(i8 arg1, i32 arg2 := '\0', f32* arg3 := null, va_args: arguments) returns i32, i32.

   f32 myvar := (.2f).

   f64[3][3] myvar := {{1,1,1},{1,1,1},{1,1,1}}.

   myvar := (3+(myvar:=1)).

   (myvar+=3).

   myvar++.

   (myvar++)++.

   myvar := ((myvar++)+1).

   section helloworld.

   if (myvar).

    myvar--.

    if ((myvar++):=3).

     myvar++.

    end if.

   end if.

   if (1) while ( myvar!=(myvar!=42) ).

    switch (myvar).

     case (1).

     end case.

     default.

     end default.

    end switch.

   end while.

   if (j) goto helloworld.

   return {4,(1+1)}.

 end function.

end module.
