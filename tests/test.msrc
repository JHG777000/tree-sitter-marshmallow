             ---Comments in marshmallow.---

//Comment
**Comment
+++Comment
---Comment

module mymod.

 require module othermod.

 external function puts(s8 string).

 class myclass*.
  u32 val := 42.
  otherclass val2.
 end class.

 class otherclass.
  s8 val.
 end class.

 class myclass2*.
  //hello
  private system_readwrite u32 a := 42.
  +++hello
  private readonly u32 b := 42.
  ---hello
  protected private_write u32 c := 42.
  ---hello
  protected system_readwrite u32 d := 42.
  ---hello
  protected writelimited u32 e := 42.
  ---hello
  private writelimited u32 f := 42.
  ---hello
  system_readwrite u32 g := 42.
  ---hello
  private_write u32 h := 42.
 end class.

 enumeration myenum.
  enum enum1 := 5223.
  enum enum2.
  enum enum3 := 42.
  enum enum4 := (-(40+2)).
  enum enum5 := 0.
  enum enum6 := (3<<3).
 end enumeration.

 constructor myclass().

  otherclass::[0]->val := "helloworld".

  self->val2 := otherclass::[0].

  s8 mystring := "Hello World!!!!".

  f32 myvar := (.2f).

  i32 myvar2 := 1.

  i32* myvar2 := null.

  u64 ðŸ˜ƒ := 'ðŸ˜ƒ'.

  u32 ðŸ˜ƒ2 := ($u32(ðŸ˜ƒ)).

  hello x := ($i8($$$u64($$$int*($$int[](array))))).

  f64[3][3] myvar := {{1,1,1},{1,1,1},{1,1,1}}.

  myvar := (3+(myvar:=1)).

  myvar := othermod::array[1]->func(1).

  (myvar+=3).

  myvar++.

  myvar--.

  (myvar++)++.

 end constructor.

 function myfunc(i8 arg1, i32 arg2 := '\0', f32* arg3 := null, my_args: arguments) returns i32, i32.

   f32 myvar := (.2f).

   f64[3][3] myvar := {{1,1,1},{1,1,1},{1,1,1}}.

   myvar := (3+(myvar:=1)).

   (myvar+=3).

   myvar++.

   (myvar++)++.

   myvar := ((myvar++)+1).

   section helloworld.

   if (myvar).

    myvar--.

    if ((myvar++):=3).

     myvar++.

    end if.

   end if.

   if (1) while ( myvar!=(myvar!=42) ).

    switch (myvar).

     case (1).

     end case.

     default.

     end default.

    end switch.

   end while.

   if (j) goto helloworld.

   return {4,(1+1)}.

 end function.

end module.
